{
  "name": "mint",
  "version": "0.3.5",
  "description": "Template abstraction framework",
  "homepage": "http://github.com/viatropos/mint.js",
  "main": "mint.js",
  "author": {
    "name": "Lance Pollard",
    "email": "lancejpollard@gmail.com"
  },
  "keywords": [
    "framework",
    "compression",
    "node"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://mths.be/mit"
    }
  ],
  "bugs": {
    "url": "https://github.com/viatropos/mint.js/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/viatropos/mint.js.git"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "dependencies": {},
  "devDependencies": {
    "coffee-script": ">= 1.3.1",
    "uglify-js": ">= 1.1.1",
    "clean-css": ">= 0.3.2",
    "mocha": ">= 0.8.1",
    "should": ">= 0.3.x",
    "chai": ">= 0.3.3",
    "sinon": ">= 1.3.1",
    "stylus": ">= 0.17.0",
    "less": ">= 1.2.x",
    "ejs": ">= 0.6.1",
    "coffeekup": ">= 0.3.1",
    "jade": ">= 0.20.x",
    "haml": ">= 0.4.x",
    "hamljs": ">= 0.6.x",
    "haml-coffee": ">= 0.5.0",
    "mustache": ">= 0.4.x",
    "handlebars": "*",
    "eco": "*"
  },
  "scripts": {
    "test": "node_modules/mocha/bin/mocha $(find test -name \"*Test.coffee\")"
  },
  "readme": "# Mint.js\n\n> Standard Interface to the Node.js Template Engines (JavaScript, CSS, text, etc.).\n\n[![Build Status](https://secure.travis-ci.org/viatropos/mint.png)](http://travis-ci.org/viatropos/mint)\n\n## Install\n\n``` bash\nnpm install mint\n```\n\n## Engines\n\n``` coffeescript\nmint = require(\"mint\")\nmint.coffee\nmint.coffeekup\nmint.eco\nmint.ejs\nmint.haml\nmint.hamlcoffee\nmint.handlebars\nmint.jade\nmint.less\nmint.stylus\nmint.markdown\nmint.mustache\nmint.uglifyjs\nmint.yui\n```\n\n## Example\n\n``` coffeescript\nmint     = require('mint')\nmint.mustache \"{title}!\", locals: title: \"Hello World\", (string) -> console.log(string) #=> \"Hello World!\"\n```\n\nor more formally:\n\n``` coffeescript\ninput     = fs.readFileSync(\"./test/fixtures/views/jade.jade\", \"utf-8\")\noutput    = fs.readFileSync(\"./test/fixtures/views/jade.html\", \"utf-8\")\nmint.jade input, {}, (error, result) ->\n  assert.equal result, output\n```\n\nor if you want just to compile a template(**Note**: supports only jade, haml, handlebars, eco, ejs):\n\n``` coffeescript\nfn = mint.compile template: input, engine: 'jade' # Function\nfn title: 'Title', author: 'Some author' # String, rendered template\n```\n\n## API\n\n``` coffeescript\nmint[engine](string, options, callback)\n```\n\n## Preprocessing\n\nSometimes you might need to hack in a feature to the language.  Like right now, stylus doesn't support multiline values for css attributes, so you might add it like this:\n\n``` coffeescript\ninput   = '''\ndiv\n  box-shadow: 0 -2px 2px  hsl(220, 20%, 40%),\n    0 -10px 10px          hsl(220, 20%, 20%),\n    0 0 15px              black,\n\n    inset 0 5px 1px       hsla(220, 80%, 10%, 0.4), \n    inset 0 0 5px         hsla(220, 80%, 10%, 0.1),\n    inset 0 20px 15px     hsla(220, 80%, 100%, 1),\n\n    inset 0 1px 0         hsl(219, 20%, 0%), \n\n    inset 0 -50px 50px -40px hsla(220, 80%, 10%, .3),  /* gradient to inset */\n\n    inset 0 -1px 0px      hsl(220, 20%, 20%),\n    inset 0 -2px 0px      hsl(220, 20%, 40%),\n    inset 0 -2px 1px      hsl(220, 20%, 65%)  \n'''\n\noutput  = '''\ndiv {\n  box-shadow: 0 -2px 2px #525f7a, 0 -10px 10px #29303d, 0 0 15px #000, inset 0 5px 1px rgba(5,19,46,0.40), inset 0 0 5px rgba(5,19,46,0.10), inset 0 20px 15px #fff, inset 0 1px 0 #000, inset 0 -50px 50px -40px rgba(5,19,46,0.30), inset 0 -1px 0px #29303d, inset 0 -2px 0px #525f7a, inset 0 -2px 1px #94a0b8;\n}\n\n'''\n# locally\noptions   =\n  preprocessor: (content) ->\n    content.replace /(\\s+)(.*),\\s+(?:\\/\\*.*\\*\\/)?\\s*/mg, (_, indent, attribute) ->\n      \"#{indent}#{attribute.replace(/\\s+/g, \" \")}, \"\n\nmint.stylus input, options, (error, result) ->\n  expect(result).toEqual output\n\n# globally\nmint.stylus.preprocessor = (content) ->\n  content.replace /(\\s+)(.*),\\s+(?:\\/\\*.*\\*\\/)?\\s*/mg, (_, indent, attribute) ->\n    \"#{indent}#{attribute.replace(/\\s+/g, \" \")}, \"\n\nmint.stylus input, {}, (error, result) ->\n  expect(result).toEqual output\n```\n\n## Test\n\n``` bash\nmocha\n```\n\n## License\n\n(The MIT License)\n\nCopyright &copy; 2011 [Lance Pollard](http://twitter.com/viatropos) &lt;lancejpollard@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "mint@0.3.5",
  "_from": "mint@>= 0.3.4"
}
